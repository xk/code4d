  //@use:  // MH_MethodEvent ($MethodEvent_t:txt ;$MethodName_t:txt ; $UserOS_t:txt)If (False)  //=================  //@FUNCTION: MH_MethodEvent  //@brief: This method is called by the MACRO_CALL_BACK  //=================  //@params:  // $1 (_t): Macro event name   // $2 (_t): Method name  // $3 (_t): User (session name)  //@optionnal:  // $4 (_t): Method content, used as an internal optionnal parameter   //=================  //@author: jpupier  //---------  //@version: 1.0  //@date: 21 may, 2010  //=================  //@note: See MACRO_CALL_BACK method  //@SVN_Folder: MH_/Else   //=================C_TEXT($1;$MethodEvent_t)C_TEXT($2;$MethodName_t)C_TEXT($3;$UserOS_t)C_TEXT($4;$FullMethodText_t)  //---------C_LONGINT($ParamCount_l)$ParamCount_l:=Count parametersC_LONGINT($pssID)  //  //=================End if   //=================Case of : (Get 4D folder(Current Resources folder)=Get 4D folder(Current Resources folder;*)) & (False)  // Do not run the code if not used as a component..: (Count parameters=3)C_TEXT($MH_Enabled_t;$SVN_Enabled_t)MH_Prefs ("get";"method_history";->$MH_Enabled_t)MH_Prefs ("get";"svn";->$SVN_Enabled_t)If ($MH_Enabled_t="enabled") | ($SVN_Enabled_t="enabled")  // We receive 3 parameters from the macro$MethodEvent_t:=$1$MethodName_t:=$2$UserOS_t:=$3  // Retreive the full method contentGET MACRO PARAMETER(Full method text;$FullMethodText_t)  //  // New process will prevent structure hanging that may be caused by macro execution..$pssID:=New process(Current method name;64000;Current method name;$MethodEvent_t;$MethodName_t;$UserOS_t;$FullMethodText_t)  //End if : (Count parameters=4)Compiler $MethodEvent_t:=$1$MethodName_t:=$2$UserOS_t:=$3$FullMethodText_t:=$4  // Switch according the event receivedCase of : ($MethodEvent_t="on_create")  // Future use ?: ($MethodEvent_t="on_load")  // In case the method have been modified from outside (find/replace)... MH_LogContent (Current date;Current time;$UserOS_t;$MethodName_t;$FullMethodText_t): ($MethodEvent_t="on_save")  // Do not log each time we press Ctrl-S: ($MethodEvent_t="on_close")  // Submit the content when closing the method (If no change detected, nothing will be recorded)MH_LogContent (Current date;Current time;$UserOS_t;$MethodName_t;$FullMethodText_t)End case End case   //=================  // eom