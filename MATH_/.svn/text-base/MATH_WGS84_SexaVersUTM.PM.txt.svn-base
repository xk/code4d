If (False)  // MATH_WGS84_SexaVersUTM [Marc Duc-Jacquet, Antoine Galmiche 05/2007]  // d'après Serge Milles  // ------------------------------------------------------  // ---------------   F R A N C A I S  ---------------  // ------------------------------------------------------  // Conversion données  //  $1,$2,$3,$4 pointeurs sur des réels   $1,$2  pour  lat long  de la source  // $3,$4 pour lat long de la cible . Ces quantités sont en DD et signées:  //  latitude (>0 si N, <0 si S) et longitude ( >0 si E, <0 si W)  // $3 et $4 lat et long cible sont également signées  // ---------------------------------------------  // MATH_WGS84_SexaVersUTM (->WGS84_Lat;->WGS84_Long;->UTM_Easting;->UTM_Northing;->UTM_ZoneLettre)  // ---------------------------------------------  // MATHERRoR  // 0 -> Pas d'erreur  // ------------------------------------------------------  // ---------------   E N G L I S H   -----------------  // ------------------------------------------------------  // Data conversion    //  $1,$2,$3,$4 pointers on reals     // $1,$2  for  latitude and longitude of source  // $3,$4 for  latitude and longitude of target .   // Those values are in DD and signed  //  latitude (>0 if N, <0 if S) and longitude ( >0 if E, <0 if W)  // $3 et $4 latitude and longitude of target are also signed  // ---------------------------------------------  // MATH_WGS84_SexaVersUTM (->WGS84_Lat;->WGS84_Long;->UTM_Easting;->UTM_Northing;->UTM_ZoneLettre)  // ---------------------------------------------  // MATHERRoR  // 0 -> No error  // ---------------------------------------------  //  (translation : BE 03-2010)End if   //@SVN_Folder: MATH_/C_LONGINT(MATHERRoR)MATHERRoR:=0C_POINTER($1;$2;$3;$4;$5)C_REAL($Easting;$Northing;$a;$f;$csf;$b;$exc;$exc2;$exc4;$exc6;$exc8)C_REAL($lat;$latr;$long;$longr;$lwez0;$lwez0r;$Cste_Est;$Cste_Nord;$n)C_REAL($Cste1;$Cste2;$Cste3;$Cste4;$Cste5;$Lambda;$Lambda1;$Lambda2)C_REAL($PHI;$Ls;$Re0;$lm0;$Re)C_LONGINT($NumZone;$i)C_TEXT($ZoneLettre)C_TEXT($L)  //datum WGS84$a:=MATH_ConstantesGéodésiques ("Iagrs_a")  // 6378137$f:=298,257222101  // MATH_ConstantesGéodésiques ("Iagrs_a") ????????$csf:=0,9996$b:=$a-($a/$f)$exc2:=(($a*$a)-($b*$b))/($a*$a)$exc:=Square root($exc2)$exc4:=$exc2*$exc2$exc6:=$exc4*$exc2$exc8:=$exc6*$exc2$lat:=$1->  //   latitude signée en DD$long:=$2->  // longitude signée en DD$longr:=$long*Pi/180  //longitude signée en radians$latr:=Abs($lat)*Pi/180  //  latitude non signée en radians$Numzone:=Int($Long+186/6)  //zone UTM$i:=78+Int($Lat/8)$L:=Char($i)If ($L<"J")$L:=Char($i-1)Else If ($L>"N")$L:=Char($i+1)End if End if $ZoneLettre:=$L$lwez0:=6*$NumZone-183$lwez0r:=$lwez0*Pi/180$n:=$a*$csf$Cste_Est:=500000$Cste_Nord:=10000000$Cste1:=1-($exc2/4)-(3*$exc4/64)-(5*$exc6/256)-(175*$exc8/16384)$Cste2:=($exc2/8)-($exc4/96)-(9*$exc6/1024)-(901*$exc8/184320)$Cste3:=(13*$exc4/768)+(17*$exc6/5120)-(311*$exc8/737280)$Cste4:=(61*$exc6/15360)-(899*$exc8/430080)$Cste5:=49561*$exc8/41287680$Lambda1:=Log(Tan(Pi/4+($Latr/2)))$Lambda2:=(1+($exc*Sin($Latr)))/(1-($exc*Sin($Latr)))$Lambda:=$Lambda1-($exc/2*Log($Lambda2))$PHI:=MATH_ArcSinus (Sin($Longr-$lwez0r)/MATH_CosinusHyperbolique ($LAMBDA))$Ls:=Log(Tan(Pi/4+($PHI/2)))$Re0:=Arctan(MATH_SinusHyperbolique ($Lambda)/Cos($Longr-$lwez0r))$Im0:=$Ls$Im:=$n*(($Cste1*$Im0)+($Cste2*Cos(2*$Re0)*MATH_SinusHyperbolique (2*$Im0))+($Cste3*Cos(4*$Re0)*MATH_SinusHyperbolique (4*$Im0))+($Cste4*Cos(6*$Re0)*MATH_SinusHyperbolique (6*$Im0))+($Cste5*Cos(8*$Re0)*MATH_SinusHyperbolique (8*$Im0)))$Re:=$n*(($Cste1*$Re0)+($Cste2*Sin(2*$Re0)*MATH_CosinusHyperbolique (2*$Im0))+($Cste3*Sin(4*$Re0)*MATH_CosinusHyperbolique (4*$Im0))+($Cste4*Sin(6*$Re0)*MATH_CosinusHyperbolique (6*$Im0))+($Cste5*Sin(8*$Re0)*MATH_CosinusHyperbolique (8*$Im0)))$Easting:=$Im+$Cste_EstIf ($Lat>0)$Northing:=$ReElse $Northing:=$Cste_Nord-$ReEnd if $3->:=$Easting$4->:=$Northing$5->:=String($NumZone)+$ZoneLettre