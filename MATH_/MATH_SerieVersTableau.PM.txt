If (False)  // MATH_SerieVersTableau [Teddy Linet 25/07/02] v0.91  // ------------------------------------------------------  // ---------------   F R A N C A I S  ---------------  // ------------------------------------------------------  // Méthode de création d'un tableau de travail pour les fonction sur  // des séries  // Permet aux fonctions qui y font appel d'utiliser comme paramètre  // pointeur un champ (accompagné éventuellement d'un ensemble)  // ou un tableau (avec typecasting en réel des booléen pour les calculs)  // ---------------------------------------------  // MATH_SerieVersTableau (->Paramètre; ->TableauRésultat; {Ensemble})  // Paramètre (Pointeur) Pointeur vers tableau, variable ou champ  // TableauRésultat (Pointeur) Pointeur vers tableau résultat (tableau de travail)  // Ensemble (Chaine optionnelle) Nom de l'ensemble  // ---------------------------------------------  // MATHERROR  // 0 -> Pas d'erreur  // ------------------------------------------------------  // ---------------   E N G L I S H   -----------------  // ------------------------------------------------------  // This method creates a temporary array for functions working on series.  // It allows to calling functions to use as parameter a pointer on a field (with optional set), or an array  // ou un tableau (avec typecasting en réel des booléen pour les calculs)  // ---------------------------------------------  // MATH_SerieVersTableau (->Parameter; ->ResultArray; {et})  // Parameter (Pointer) Pointer to array, variable or field  // ResultArray (Pointer) Pointer to a result array (temporary array)  // Set (Optional string) Name of set  // ---------------------------------------------  // MATHERROR  // 0 -> No error  // ------------------------------------------------------  //  (translation : BE 3-2010)End if   //@SVN_Folder: MATH_/C_LONGINT(MATHERROR)MATHERROR:=0C_POINTER($1;$vPointeurParam_W;$vTable_W)  // pointeur d'un tableau ou d'un champC_POINTER($2;$vPointeurTableau_W)  // Tableau de travail pointéC_TEXT($3;$vEnumération_S32)C_TEXT($vNomVar_S32)C_REAL($vNumTable_F;$vNumChamp_F)$vPointeurParam_W:=$1$vPointeurTableau_W:=$2$vEnumération_S32:=$3ARRAY REAL($vPointeurTableau_W->;0)  // On efface tout !  // Ce qui veut aussi dire que le tableau est nul en cas d'erreurRESOLVE POINTER($vPointeurParam_W->;$vNomVar_S32;$vNumTable_F;$vNumChamp_F)  // Il ne s'agit pas d'un champ (donc à priori une variable)If ($vNumChamp_F=0)Case of   // Cas des tableau simples => recopie: ((Type($vPointeurParam_W->)=Integer array) | (Type($vPointeurParam_W->)=LongInt array) | (Type($vPointeurParam_W->)=Real array))COPY ARRAY($vPointeurParam_W->;$vPointeurTableau_W->)  // Ici le typecasting semble superflus  // Cas des tableaux de booleens => typecasting en reel (0 ; 1): (Type($vPointeurParam_W->)=Boolean array)  // Pourquoi pas après toutFor ($i;0;Size of array($vPointeurParam_W->))$vPointeurTableau_W->{$i}:=Num($vPointeurParam_W->{i})End for End case   // Cas ou il s'agit d'un champElse $vTable_W:=Table($vNumTable_F)  // Renvoie le pointeur de la tableCOPY NAMED SELECTION($vTable_W->;"Tempo")  // On ne modifie pas la sélection courante et surtout l'enregistrement courantIf (Count parameters=2)  // Utilise l'ensemble si nécessaireUSE SET($vEnumération_S32)End if FIRST RECORD($vTable_W->)Case of   // Cas d'un champ dans une sélection et d'un type numérique: ((Type($vPointeurParam_W->)=Is Integer) | (Type($vPointeurParam_W->)=Is LongInt) | (Type($vPointeurParam_W->)=Is Real))For ($i;1;Records in selection($vTable_W->))INSERT IN ARRAY($vPointeurTableau_W->;1)  // L'ordre est ici sans importance$vPointeurTableau_W->{1}:=$vPointeurParam_W->NEXT RECORD($vTable_W->)End for   // Cas d'un champ dans une sélection et d'un type booleen: (Type($vPointeurParam_W->)=Is Boolean)For ($i;1;Records in selection($vTable_W->))INSERT IN ARRAY($vPointeurTableau_W->;1)  // L'ordre est ici sans importance$vPointeurTableau_W->{1}:=Num($vPointeurParam_W->)NEXT RECORD($vTable_W->)End for End case USE NAMED SELECTION("Tempo")  // On reste propreCLEAR NAMED SELECTION("Tempo")  // Et on fait le ménageEnd if 