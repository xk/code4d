If (False)  // MATH_Segment [Antoine Galmiche 07/2002]  // ------------------------------------------------------  // ---------------   F R A N C A I S  ---------------  // ------------------------------------------------------  // Rappels mathématiques :  // Le rayon du cercle et l'angle sont connus  // La méthode calcule la corde, l'arc, la flêche et la surface du segment  // ---------------------------------------------  // MATH_Segment (Sélecteur; Rayon;Angle) -> Numérique  // Sélecteur (Entier) 1=corde, 2=arc, 3=flèche, 4=surface  // ou constantes Segment_Corde, Segment_Arc, Segment_Fleche, Segment_Surface  // Rayon (Numérique) rayon du cercle  // Angle (Numérique) angle en degrés  // Résultat (Numérique) valeur suivant sélecteur  // ---------------------------------------------  // MATHERROR  // 0 -> Pas d'erreur  // -1 -> Sélecteur hors définition  // -2 -> Angle hors définition [-360;+360]  // ---------------------------------------------  // ATTENTION  // Nécessite une version de 4D avec la constante Pi  // L'angle doit être exprimé en degrés  // ------------------------------------------------------  // ---------------   E N G L I S H   -----------------  // ------------------------------------------------------   // Math's summary :  // Circle's radius and angle are known  // Méthod computes chord, arc, la flêche... and surface of segment  // ---------------------------------------------  // MATH_Segment (Selector; Radius;Angle) -> Real  // Sélecteur (Integer) 1=chord, 2=arc, 3=flèche, 4=surface  // or constants Segment_Chord, Segment_Arc, Segment_Fleche, Segment_Surface  // Radius (Real) circle radius  // Angle (Real) angle in degrees  // Result (Real) value according to selector  // ---------------------------------------------  // MATHERROR  // 0 -> No error  // -1 -> Selector out of range  // -2 -> Angle out of range [-360;+360]  // ---------------------------------------------  // WARNING  // This method needs a 4D version with constant Pi  // Angle must be espressed in degrees  // ---------------------------------------------  //  (translation : BE 03-2010)End if   //@SVN_Folder: MATH_/C_LONGINT(MATHERROR)C_LONGINT($1)C_REAL($2;$3;$0)$0:=0  // Traitement des erreursCase of : (($1<=0) | ($1>4))MATHERROR:=-1: (Abs($3)>360)MATHERROR:=-2Else MATHERROR:=0End case   // AlgorithmeIf (MATHERROR=0)Case of : ($1=1)  // CORDE$0:=2*$2*Sin($3*Degree/2): ($1=2)  // ARC$0:=$2*$3*Pi/180: ($1=3)  // FLECHE  $0:=$2*(1-Cos($3*Degree/2)): ($1=4)  // SURFACE $0:=($3*Pi/180)-Sin($3*Degree)$0:=$0*($2^2)/2End case End if 