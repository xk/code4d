  `This method is part from Math4D project 2002-2010 with authors : Jacques Bossy, Philip Burns, Olivier Deschanels, Marc Duc-Jacquet  `Bernard Escaich, Antoine Galmiche, Micaël Germann, George F. Huhn, Nicolas Jore, Teddy Linet, Frédéric Quoirez, Michel Saiz, Robert Van Loo If (False)  ` MTH_STA_ProportionEqualities (was MATH_EgaliteProportions) [Teddy LINET 12/2002]  ` ------------------------------------------------------  ` ---------------   E N G L I S H   -----------------  ` ------------------------------------------------------  ` WARNING : This method needs MATH_LoiNormale  ` ---------------------------------------------  ` In its first syntax : this method compares a real proportion to a given value  ` In its second syntax : this method compares two experimental proportions  `   ` Returns p, risk than its 2 values are different  ` If p is greater than significant thershold (usually 5%), me may consider than proportions are different (rejection of hypothesis H0)  ` Else, we can't conclude  ` WARNING : this does not fit with usual method in statistics (first test, then calculation of p, if z is included in confidence interval)  ` But in fact, result is equivalent.  ` ---------------------------------------------  `Math's summary  ` Equality test of a experimental proportion and a given value  ` This test allows to verify if Po is different from Ph (reject of Ho)  ` Parameter to evaluate is following :  `        Po-Ph  ` z =-------------------  `      Sqr((Ph(1-Ph))/n)  `where n represents number of elements  ` Validity conditions : n*Ph >= 5 and n*(1-Ph)>= 5  ` To compare 2 experimental proportions (Poa et Pob), parameter to evauate is :  `           Poa - Pob  ` z=----------------------  `       (^p(1-^p)     (^p(1-^p)                 naPoa+nbPob  `    Sqr(-------- + --------  )  ou ^p =-------------  `       (    na             nb    )                     na+nb  ` Conditions are : na*^p>=5 ; na(1-^p)>=5 ; nb*^p>=5 ; nb(1-^p)>=5  ` ---------------------------------------------  ` Two syntaxes :  ` 1) MATH_EgaliteMoyennes (ObsProportion;NbElements;RealProportion)  ` ObsProportion (Real) : Observed Proportion in data serie  ` NbElements (Real) : Number of elements in serie  ` RealProportion (Real) : Value to compare  ` Renvoie $0 (Réel)  represents p risk than its two values are different  `   `2) MATH_EgaliteMoyennes (ProprotionA;NbElementsA;ProportionB;NbElementsB)  ` ProportionA (Réel) : Observed Proportion in data serie A  ` NbElementsA (Réel) : Number of elements in serie A  ` ProportionB (Réel) : Observed Proportion in data serie B  ` NbElementsB (Réel) : Number of elements in serie B  ` ---------------------------------------------  ` MATHERROR  `    0 -> No error  `  -1 -> n <= 0  `  -2 -> Ph = zero  `  -3 -> No proportion  ` +1 -> Conditions not fullfilled  ` +3 -> n is not an integer (rounded)  ` ---------------------------------------------  ` EXAMPLES  ` ------------------------------------------------------  ` ---------------   F R A N C A I S  ---------------  ` ------------------------------------------------------  ` ATTENTION : Nécessite MATH_LoiNormale  ` ---------------------------------------------  ` Dans sa 1ère écriture :  ` Permet de comparer une proportion vraie à une valeur donnée  ` Dans sa 2e écriture  ` Permet de comparer deux proportions expérimentales  `   ` Renvoie p, le risque que ses 2 valeurs soient différentes  ` Si p est supérieur au seuil de signification (habituellement 5%) on peut  ` considerer que les moyennes sont différentes (rejet de l'hypothèse Ho).  ` Sinon, on ne peut rien conclure…  `   ` ATTENTION : ceci ne correspond pas à la conduite habituelle  ` en statistiques (d'abord test, puis calcul de p si z est dans l'intervalle  ` de confiance). Mais le résultat est en fait équivalent  ` ---------------------------------------------  ` Rappels mathématiques :  ` Le test d'égalité d'une proportion expérimentale (Po) à une valeur donnée (Ph)  ` Ce test permet de vérifier si Po différent Ph (rejet de Ho)  ` Le paramètre à évaluer est donc le suivant :  `        Po-Ph  ` z =-------------------  `      Sqr((Ph(1-Ph))/n)  `ou n représente le nombre d'élément  ` Conditions de validité : n*Ph >= 5 et n*(1-Ph)>= 5  ` Pour comparer 2 proportions expérimentales (Poa et Pob) le paramètre à évaluer   `           Poa - Pob  ` z=----------------------  `       (^p(1-^p)     (^p(1-^p)                 naPoa+nbPob  `    Sqr(-------- + --------  )  ou ^p =-------------  `       (    na             nb    )                     na+nb  ` Les conditions sont : na*^p>=5 ; na(1-^p)>=5 ; nb*^p>=5 ; nb(1-^p)>=5  ` ---------------------------------------------  ` Deux écritures :  `   ` MATH_EgaliteMoyennes (ProportionObs;NbElements;ProportionReelle)  ` ProportionObs (Réel) : Proportion Observée dans la série  ` NbElements (Réel) : Nombre d'éléments de la série  ` ProportionReelle (Réel) : Valeur à comparer  ` Renvoie $O (Réel)  représentant p le risque que ses 2 valeurs soient différente  `   ` MATH_EgaliteMoyennes (ProportionA;NbElementsA;ProportionB;NbElementsB)  ` ProportionA (Réel) : Proportion Observée dans la série A  ` NbElementsA (Réel) : Nombre d'éléments de la série A  ` ProportionB (Réel) : Proportion Observée dans la série B  ` NbElementsB (Réel) : Nombre d'éléments de la série B  ` ---------------------------------------------  ` MATHERROR  ` 0 -> Pas d'erreur  ` -1 -> n <= 0  ` -2 -> Ph nul  ` -3 -> Pas de proportion  ` +1 -> Conditions non remplies  ` +3 -> n n'est pas un entier (arrondi)  ` ---------------------------------------------  ` EXEMPLES  ` ------------------------------------------------------  `  (translation : BE 03-2010)End if C_REAL($0;$p_F;$z_F;$1;$vProportionObs_F;$vProportionA_F;$2;$vNbElementsObs_F;$vNbElementsA_F)C_REAL($3;$vProportionReelle_F;$vProportionB_F;$4;$vNbElementsB_F;$vpChapeau_F;$VariableTravail_F)If (False)C_REAL(MTH_STA_ProportionEqualities ;$0)C_REAL(MTH_STA_ProportionEqualities ;$1)C_REAL(MTH_STA_ProportionEqualities ;$2)C_REAL(MTH_STA_ProportionEqualities ;$3)C_REAL(MTH_STA_ProportionEqualities ;$4)End if C_LONGINT($vMathError_L;MATHERROR)$vMathError_L:=0$p_F:=0  ` par défautIf (Count parameters#4)  `Cas ou il s'agit de la comparaison avec une proportion vraie$vProportionObs_F:=$1$vNbElementsObs_F:=$2$vProportionReelle_F:=$3  ` Matherror n'est pas tout de suite calculée  ` Car elle pourrait être parasitée par LoiNormaleCase of : ($vNbElementsObs_F<=1)  ` Sinon division par zéro$vMathError_L:=-1: ($vProportionReelle_F=0)  ` Sinon division par zéro$vMathError_L:=-2: (($vProportionObs_F>1) | ($vProportionObs_F<0) | ($vProportionReelle_F>1) | ($vProportionReelle_F<0))$vMathError_L:=-3Else   ` Erreurs corrigeables (du moins important au plus important)  ` On ne met pas de "au cas ou" car elles pourront peut-être être multiples      If (($vNbElementsObs_F-Int($vNbElementsObs_F))#0)  ` Pas un entier$vMathError_L:=3$vNbElementsObs_F:=Round($vNbElementsObs_F;0)  ` ArrondiEnd if If ((($vNbElementsObs_F*$vProportionReelle_F)<5) | (($vNbElementsObs_F*(1-$vProportionReelle_F))<5))  ` Vérifie que les conditions sont remplies  $vMathError_L:=1End if End case If ($vMathError_L>=0)  ` Pas de drame => on continue$z_F:=$vProportionObs_F-$vProportionReelle_F$VariableTravail_F:=($vProportionReelle_F*(1-$vProportionReelle_F))$VariableTravail_F:=$VariableTravail_F/$vNbElementsObs_F$VariableTravail_F:=Square root($VariableTravail_F)$z_F:=$z_F/$VariableTravail_F  ` Calcul du paramètre  ` Logiquement on vérifie que le paramètre est bien dans l'intervalle de pari$p_F:=1-(MTH_STA_StandardDistribution ($z_F;"P")*2)  ` Puis on cacul pEnd if Else   ` Cas ou il s'agit de la comparaison entre 2 proportions observées$vProportionA_F:=$1$vNbElementsA_F:=$2$vProportionB_F:=$3$vNbElementsB_F:=$4Case of : (($vNbElementsA_F<=1) | ($vNbElementsB_F<=1))  ` Sinon division par zéro$vMathError_L:=-1: (($vProportionA_F=0) | ($vProportionB_F=0))  ` Sinon division par zéro$vMathError_L:=-2: (($vProportionA_F>1) | ($vProportionA_F<0) | ($vProportionB_F>1) | ($vProportionB_F<0))$vMathError_L:=-3Else   ` Erreurs corrigeables (du moins important au plus important)If (($vNbElementsA_F-Int($vNbElementsA_F))#0)  ` Pas un entier$vMathError_L:=3$vNbElementsA_F:=Round($vNbElementsA_F;0)  ` ArrondiEnd if If (($vNbElementsB_F-Int($vNbElementsB_F))#0)  ` Pas un entier$vMathError_L:=3$vNbElementsB_F:=Round($vNbElementsB_F;0)  ` ArrondiEnd if End case If ($vMathError_L>=0)  ` Pas de drame => on continue$vpChapeau_F:=($vNbElementsA_F*$vProportionA_F)+($vNbElementsB_F*$vProportionB_F)$vpChapeau_F:=$vpChapeau_F/($vNbElementsA_F+$vNbElementsB_F)  ` Calcul de ^p    $z_F:=$vProportionA_F-$vProportionB_F$VariableTravail_F:=($vpChapeau_F*(1-$vpChapeau_F))$VariableTravail_F:=$VariableTravail_F*((1/$vNbElementsA_F)+(1/$vNbElementsB_F))$VariableTravail_F:=Square root($VariableTravail_F)$z_F:=$z_F/$VariableTravail_F  ` Calcul du paramètre  ` Logiquement on vérifie que le paramètre est bien dans l'intervalle de pari$p_F:=1-(MTH_STA_StandardDistribution ($z_F;"P")*2)  ` Puis on cacul p      ` Vérifie que les conditions sont remplies  Case of   ` Pour être plus lisible (un si-fin de si aurait suffit): (($vNbElementsA_F*$vpChapeau_F)<5)$vMathError_L:=1: (($vNbElementsA_F*(1-$vpChapeau_F))<5)$vMathError_L:=1: (($vNbElementsB_F*$vpChapeau_F)<5)$vMathError_L:=1: (($vNbElementsB_F*(1-$vpChapeau_F))<5)$vMathError_L:=1End case End if End if $0:=$p_F  ` Enfin, on renvoie la valeur calculéeMATHERROR:=$vMathError_L  ` Puis on renvoie le matherror de cette fonction