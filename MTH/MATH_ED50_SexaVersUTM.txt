C_POINTER($1;$2;$3;$4;$5)MTH_GDY_ED50_SexaVersUTM ($1;$2;$3;$4;$5)  `Work on International version  `TestéeIf (False)  ` MATH_ED50_SexaVersUTM [Marc Duc-Jacquet, Antoine Galmiche 05/2007]  ` ------------------------------------------------------  ` ---------------   F R A N C A I S  ---------------  ` ------------------------------------------------------  ` ATTENTION UTILISE :  ` MATH_ConstantesGéodésiques  ` MATH_ArcSinus  ` MATH_CosinusHyperbolique  ` MATH_SinusHyperbolique  ` ---------------------------------------------  ` Conversion données  ` ---------------------------------------------  ` MATH_ED50_SexaVersUTM (->ED50_Lat;->ED50_Long;->UTM_Easting50;->UTM_Northing50;->UTM_ZoneLettre50)  ` ---------------------------------------------  ` MATHERROR  ` 0 -> Pas d'erreur  ` ------------------------------------------------------  ` ---------------   E N G L I S H   -----------------  ` ------------------------------------------------------  ` WARNING : this method uses :  ` MATH_ConstantesGéodésiques  ` MATH_ArcSinus  ` MATH_CosinusHyperbolique  ` MATH_SinusHyperbolique  ` ---------------------------------------------  ` Data conversion   ` ---------------------------------------------  ` MATH_ED50_SexaVersUTM (->ED50_Lat;->ED50_Long;->UTM_Easting50;->UTM_Northing50;->UTM_ZoneLettre50)  ` ---------------------------------------------  ` MATHERROR  ` 0 -> No error  ` ---------------------------------------------  `  (translation : BE 03-2010)C_LONGINT(MATHERROR)MATHERROR:=0C_POINTER($1;$2;$3;$4;$5)C_REAL($Easting;$Northing;$a;$f;$csf;$b;$exc;$exc2;$exc4;$exc6;$exc8)C_REAL($lat;$latr;$long;$longr;$lwez0;$lwez0r;$Cste_Est;$Cste_Nord;$n)C_REAL($Cste1;$Cste2;$Cste3;$Cste4;$Cste5;$Lambda;$Lambda1;$Lambda2)C_REAL($PHI;$Ls;$Re0;$lm0;$Re)C_LONGINT($NumZone;$i)C_TEXT($ZoneLettre)C_STRING(255;$L)  `datum ED50$a:=MATH_ConstantesGéodésiques ("Hayford_a")$f:=MATH_ConstantesGéodésiques ("Hayford_f")$csf:=0,9996$b:=$a-($a/$f)$exc2:=MATH_ConstantesGéodésiques ("Hayford_e2")$exc:=Square root($exc2)$exc4:=$exc2*$exc2$exc6:=$exc4*$exc2$exc8:=$exc6*$exc2$lat:=$1->  `   latitude signée en DD$long:=$2->  ` longitude signée en DD$longr:=$long*Pi /180  `longitude signée en radians$latr:=Abs($lat)*Pi /180  `  latitude non signée en radians$NumZone:=Int($long+186/6)  `zône UTM$i:=78+Int($lat/8)$L:=Char($i)If ($L<"J")$L:=Char($i-1)Else If ($L>"N")$L:=Char($i+1)End if End if $ZoneLettre:=$L$lwez0:=6*$NumZone-183$Cste_Est:=500000$Cste_Nord:=10000000$n:=$a*$csfIf ($lat>0)$n:=$a*$csf$lwez0r:=$lwez0*Pi /180$Cste_Nord:=0Else $n:=$b*$csf$lwez0r:=$lwez0*Pi /180$Cste_Nord:=10000000End if $Cste1:=1-($exc2/4)-(3*$exc4/64)-(5*$exc6/256)-(175*$exc8/16384)$Cste2:=($exc2/8)-($exc4/96)-(9*$exc6/1024)-(901*$exc8/184320)$Cste3:=(13*$exc4/768)+(17*$exc6/5120)-(311*$exc8/737280)$Cste4:=(61*$exc6/15360)+(899*$exc8/430080)$Cste5:=49561*$exc8/41287680$Lambda1:=Log(Tan(Pi /4+($Latr/2)))$Lambda2:=(1+($exc*Sin($Latr)))/(1-($exc*Sin($Latr)))$Lambda:=$Lambda1-($exc/2*Log($Lambda2))$PHI:=MATH_ArcSinus (Sin($Longr-$lwez0r)/MATH_CosinusHyperbolique ($LAMBDA))$Ls:=Log(Tan(Pi /4+($PHI/2)))$Re0:=Arctan(MATH_SinusHyperbolique ($Lambda)/Cos($Longr-$lwez0r))$Im0:=$Ls$Im:=$n*(($Cste1*$Im0)+($Cste2*Cos(2*$Re0)*MATH_SinusHyperbolique (2*$Im0))+($Cste3*Cos(4*$Re0)*MATH_SinusHyperbolique (4*$Im0))+($Cste4*Cos(6*$Re0)*MATH_SinusHyperbolique (6*$Im0))+($Cste5*Cos(8*$Re0)*MATH_SinusHyperbolique (8*$Im0)))$Re:=$n*(($Cste1*$Re0)+($Cste2*Sin(2*$Re0)*MATH_CosinusHyperbolique (2*$Im0))+($Cste3*Sin(4*$Re0)*MATH_CosinusHyperbolique (4*$Im0))+($Cste4*Sin(6*$Re0)*MATH_CosinusHyperbolique (6*$Im0))+($Cste5*Sin(8*$Re0)*MATH_CosinusHyperbolique (8*$Im0)))$Easting:=$Im+$Cste_EstIf ($Lat>0)$Northing:=$ReElse $Northing:=$Cste_Nord-$ReEnd if $3->:=$Easting$4->:=$Northing$5->:=String($NumZone)+$ZoneLettreEnd if 