C_REAL($1;$2;$3;$4)C_POINTER($5;$6)$0:=MTH_GDY_RhumbLine ($1;$2;$3;$4;$5;$6)  `Work on International versionIf (False)  `MATH_Loxodromie  `Auteur :   `Date :   ` ------------------------------------------------------  ` ---------------   F R A N C A I S  ---------------  ` ------------------------------------------------------  ` ------------------------------------------------------  ` ---------------   E N G L I S H   -----------------  ` ------------------------------------------------------C_REAL($1;$2;$3;$4)C_POINTER($5;$6)C_REAL($distance;$radRoute;$Route;$0)C_REAL($LatA;$LongA;$LatB;$LongB;$Radius;$deltaLong)$longA:=$2*Pi /180$latA:=$1*Pi /180$longB:=$4*Pi /180$latB:=$3*Pi /180If ($latB=$latA)If ($longB=$longA)$radRoute:=0$distance:=0Else If ($longA<$longB)$radRoute:=3*Pi /2Else $radRoute:=Pi /2End if $distance:=Abs(60*($longA-$longB)*Cos($latB)*180/Pi )  `en milles End if Else If ($longA=$longB)If ($latB>$latA)$radRoute:=0Else $radRoute:=Pi End if $distance:=Abs(60*180/Pi *($latA-$latB))  `en millesElse $deltalong:=$longB-$longA$num:=-Log(Tan(Pi /4+($latA/2)))+Log(Tan(Pi /4+($latB/2)))$radRoute:=MATH_ArcTangente2 ($deltalong;$num)$distance:=Abs(60*180/Pi *($latB-$latA)/Cos($radRoute))  `en millesEnd if End if If ($radRoute<0)$radRoute:=$radRoute+(2*Pi )End if $degroute:=$radRoute*180/Pi $radius:=6378137  ` earth radius($5->):=$distance*$radius*Pi /180/60$6->:=$degrouteEnd if 