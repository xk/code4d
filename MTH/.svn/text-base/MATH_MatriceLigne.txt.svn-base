C_POINTER($1)C_LONGINT($2;$3;$5)C_REAL($4)MTH_ALG_MatrixLine ($1;$2;$3;$4;$5)  `Work on International version  `TestéeIf (False)  `  [Antoine Galmiche 30/07/2002]  ` ------------------------------------------------------  ` ---------------   F R A N C A I S  ---------------   ` ------------------------------------------------------  ` La méthode permet de réaliser des opérations sur une ou deux lignes  ` d'une matrice régulière  ` Utiliser MATH_ObjetVersMatrice pour travailler avec une matrice correcte  ` ---------------------------------  ` MATH_MatriceLigne(->Tableau2D; Sélecteur; Ligne1; Coefficient; Ligne2)  ` Tableau2D (Pointeur) Tableau réel 2D  ` Sélecteur (Entier) 1->Multiplier, 2->Permuter, 3->Ajouter  ` ou constantes : Matrice_Multiplier, Matrice_Permuter, Matrice_Ajouter  ` Ligne1 (Entier) Ligne de travail  ` Coefficient (Réel) Coefficient multiplicateur  ` Ligne2 (Entier) Ligne secondaire  ` ----------------------------------  ` MATHERROR  `  0 -> Pas d'erreur  ` -1 -> Le sélecteur est hors définition  ` -2 -> Une ligne est hors tableau  ` -3 -> Ligne1 et Ligne2 n'ont pas le même nombre d'éléments (impossible)  ` ----------------------------------  ` ATTENTION :  ` Multiplier, si Ligne2 non nul, elle est ajoutée après la multiplication  ` Permuter, Coeff est appliqué à Ligne1 après la permutation  ` Le tableau passé en premier paramètre est modifié  ` ------------------------------------------------------  ` ---------------   E N G L I S H   -----------------  ` ------------------------------------------------------  ` This method allows to realize operations with one or two lines from a regular matrix  ` Use MATH_ObjetVersMatrice to work with a regular matrix  ` ---------------------------------------------  ` MATH_MatriceLigne(->2DArray; Selector; Line1; Coefficient; Line2)  ` 2DArray (Pointer) 2D Array real  ` Selector (Integer) 1->Multiply, 2->Swap, 3->Add  ` or constants : Matrice_Multiplier, Matrice_Permuter, Matrice_Ajouter  ` Line1 (Integer) Line to be used  ` Coefficient (Real) Multiplier coefficient  ` Line2 (Integer) Secondary line  ` ----------------------------------  ` MATHERROR  `  0 -> No error  ` -1 -> Selector is out of range  ` -2 -> A line is out of the array  ` -3 -> Line 1 and Line 2 don't have the same number of items  ` ----------------------------------  ` CAREFUL :  ` Multiply : if Line 2 non zero, it is added after the multiplication  ` Swap : coeff is applied to Line 1 after the swap  ` The array (first argument) is modified.  ` ------------------------------------------------------  ` (translation : AG - 02/2007)C_LONGINT(MATHERROR)C_POINTER($1)C_LONGINT($2;$3;$5)C_REAL($4)C_LONGINT($i)C_REAL($k)Case of : (($2<0) & ($2>3))MATHERROR:=-1: (($3>Size of array($1->)) | ($5>Size of array($1->)))MATHERROR:=-2: (($5#0) & (Size of array($1->{$3})#Size of array($1->{$5})))MATHERROR:=-3Else MATHERROR:=0End case If (MATHERROR=0)Case of : ($2=1)  ` Multiplier, si Ligne2 non nul, elle est ajoutée après la multiplicationFor ($i;1;Size of array($1->{$3}))  ` chaque élément de la ligne $3$1->{$3}{$i}:=($1->{$3}{$i})*$4If ($5#0)$1->{$3}{$i}:=$1->{$3}{$i}+($1->{$5}{$i})End if End for : ($2=2)  ` Permuter, Coeff est appliqué à Ligne1 après la permutationFor ($i;1;Size of array($1->{$3}))  ` chaque élément de la ligne $2$k:=$1->{$3}{$i}$1->{$3}{$i}:=$1->{$5}{$i}$1->{$5}{$i}:=$k*$4End for : ($2=3)  ` Ajouter, Coeff est appliqué à Ligne2 puis Ligne2 est ajoutée à Ligne1For ($i;1;Size of array($1->{$3}))  ` chaque élément de la ligne $2$1->{$3}{$i}:=($1->{$3}{$i})+(($1->{$5}{$i})*$4)End for End case End if End if 