C_POINTER($1;$2;$3;$4;$5)MTH_GDY_ED50_UTMVersSexa ($1;$2;$3;$4;$5)  `Work on International version  `TestéeIf (False)  ` MATH_ED50_UTMVersSexa [Marc Duc-Jacquet, Antoine Galmiche 05/2007]  ` ------------------------------------------------------  ` ---------------   F R A N C A I S  ---------------  ` ------------------------------------------------------  ` ATTENTION UTILISE :  ` MATH_ConstantesGéodésiques  ` MATH_ArcSinus  ` MATH_CosinusHyperbolique  ` MATH_SinusHyperbolique  ` ---------------------------------------------  ` Conversion données  ` ---------------------------------------------  ` MATH_ED50_UTMVersSexa (->UTM_Easting50;->UTM_Northing50;->UTM_ZoneLettre50;->ED50_Lat;->ED50_Long)  ` ---------------------------------------------  ` MATHERROR  ` 0 -> Pas d'erreur   ` ------------------------------------------------------  ` ---------------   E N G L I S H   -----------------  ` ------------------------------------------------------  ` ATTENTION UTILISE :  ` MATH_ConstantesGéodésiques  ` MATH_ArcSinus   ` MATH_CosinusHyperbolique   ` MATH_SinusHyperbolique  ` ---------------------------------------------  ` Data conversion    ` ---------------------------------------------  ` MATH_ED50_UTMVersSexa (->UTM_Easting50;->UTM_Northing50;->UTM_ZoneLettre50;->ED50_Lat;->ED50_Long)  ` ---------------------------------------------  ` MATHERROR  ` 0 -> No error  ` ---------------------------------------------  `  (translation : BE 03-2010)C_LONGINT(MATHERROR)MATHERROR:=0C_POINTER($1;$2;$3;$4;$5)C_REAL($Easting;$Northing;$a;$f;$csf;$b;$exc;$exc2;$exc4;$exc6;$exc8)C_REAL($lat;$latr;$long;$longr;$lwez0;$lwez0r;$Cste_Est;$Cste_Nord;$n)C_REAL($Cste1;$Cste2;$Cste3;$Cste4;$Cste5;$Lambda;$Lambda1;$Lambda2)C_REAL($zA;$zB;$lm;$PHI;$PHI1;$Ls;$Re;$Erreur)C_LONGINT($NumZone;$i)C_TEXT($ZoneLettre)C_STRING(255;$L)  `passage des paramètres$Easting:=$1->  `   easting en mètres$Northing:=$2->  ` northing en mètres$ZoneLettre:=$3->  `zone UTM $NumZone:=Num(Substring($ZoneLettre;1;2))$ZoneLettre:=Substring($ZoneLettre;3;1)  `Datum="ED50"$a:=MATH_ConstantesGéodésiques ("Hayford_a")$f:=MATH_ConstantesGéodésiques ("Hayford_f")$csf:=0,9996$b:=$a-($a/$f)$exc2:=(($a*$a)-($b*$b))/($a*$a)$exc:=Square root($exc2)$exc4:=$exc2*$exc2$exc6:=$exc4*$exc2$exc8:=$exc6*$exc2$lwez0:=6*$NumZone-183$lwez0r:=$lwez0*Pi /180$Cste_Est:=500000If ($ZoneLettre<"N")$Cste_Nord:=10000000Else $Cste_Nord:=0End if $n:=$a*$csf$Cste1:=1-($exc2/4)-(3*$exc4/64)-(5*$exc6/256)-(175*$exc8/16384)$Cste2:=($exc2/8)+($exc4/48)+(7*$exc6/2048)+($exc8/61440)$Cste3:=($exc4/768)+(3*$exc6/1280)+(559*$exc8/368640)$Cste4:=(17*$exc6/30720)+(283*$exc8/430080)$Cste5:=4397*$exc8/41287680$zA:=($Northing-$Cste_Nord)/$n/$Cste1$zB:=($Easting-$Cste_Est)/$n/$Cste1$Re:=$zA-($Cste2*(Sin(2*$zA)*MATH_CosinusHyperbolique (2*$zB)))-($Cste3*(Sin(4*$zA)*MATH_CosinusHyperbolique (4*$zB)))-($Cste4*(Sin(6*$zA)*MATH_CosinusHyperbolique (6*$zB)))-($Cste5*(Sin(8*$zA)*MATH_CosinusHyperbolique (8*$zB)))$Im:=$zB-($Cste2*(Cos(2*$zA)*MATH_SinusHyperbolique (2*$zB)))-($Cste3*(Cos(4*$zA)*MATH_SinusHyperbolique (4*$zB)))-($Cste4*(Cos(6*$zA)*MATH_SinusHyperbolique (6*$zB)))-($Cste5*(Cos(8*$zA)*MATH_SinusHyperbolique (8*$zB)))$PHI:=MATH_ArcSinus (Sin($Re)/MATH_CosinusHyperbolique ($Im))$LAMBDA:=Log(Tan((Pi /4)+($PHI/2)))$vLong:=Arctan(MATH_SinusHyperbolique ($Im)/Cos($Re))*180/Pi   `longitude en degrés décimaux$vLong:=$vLong+$lwez0$PHI1:=2*Arctan(Exp($LAMBDA))-(Pi /2)$i:=0Repeat $PHI2:=2*(Arctan(Exp($LAMBDA+(($exc/2)*Log((1+($exc*Sin($PHI1)))/(1-($exc*Sin($PHI1))))))))-(Pi /2)$Erreur:=Abs($PHI2-$PHI1)$PHI1:=$PHI2$i:=$i+1Until ($Erreur<0,000000000001) | ($i>15)$vLat:=$PHI2*180/Pi $4->:=$vLat  `latitude signée en DD$5->:=$vLong  `longitude signée en DDEnd if 