C_POINTER($1)  ` Pointer to the String/Text/BLOB to processMTH_NBR_ROT13 ($1)If (False)  ` MATH_ROT13 [Nicolas JORE 11/02/2004]  ` ------------------------------------------------------  ` ---------------   F R A N C A I S  ---------------  ` ------------------------------------------------------  ` Pointeur vers une variable chaîne, un champ alpha, un texte ou un blob  ` L'objet pointé est traduit suivant l'algo ROT13 : décalage de 13 caractères  ` ABC devient NOP et xyz devient klm  ` les chiffres et les autres caractères sont inchangés  ` ---------------------------------------------  ` MATHERROR  ` 0 -> Pas d'erreur  ` ---------------------------------------------  ` Note : cette méthode remplace celle écrite par Antoine Galmiche  ` Elle est beaucoup plus rapide, mais nécessite un changement dans l'implantation  ` ce n'est plus un texte comme paramètre, mais un pointeur  ` et il n'y a plus de résultat.  ` Nom original : NJBLB_ConvertUsingROT13  ` ------------------------------------------------------  ` ---------------   E N G L I S H   -----------------  ` ------------------------------------------------------  ` Pointer to a string variable, an alphanumeric field or a blob  ` Pointed object is translated with ROT13 algorithm : move forward of 13 characters  ` ABC becoms NOP and xyz becoms klm  ` Digits and other characters remain unchanged.  ` ---------------------------------------------  ` MATHERROR  ` 0 -> No error  ` ------------------------------------------------------  `  (translation : BE 3-2010)C_POINTER(MATH_ROT13 ;$1)  `End if C_LONGINT(MATHERROR)MATHERROR:=0C_POINTER($1)  ` Pointer to the String/Text/BLOB to process  ` VariablesC_LONGINT($VL_NbParams)C_LONGINT($VL_Counter)C_LONGINT($VL_Size)C_LONGINT($VL_AsciiCode)C_LONGINT($VL_Offset)C_LONGINT($VL_Type)C_BLOB($VX_RefBLOB)C_BLOB($VX_BLOB)  ` Step 1 : Create a complete ascii table converted to ROT13SET BLOB SIZE($VX_RefBLOB;256)For ($VL_Counter;0;255)Case of : (($VL_Counter>=65) & ($VL_Counter<=90))$VX_RefBLOB{$VL_Counter}:=65+(($VL_Counter-65+13)%26): (($VL_Counter>=97) & ($VL_Counter<=122))$VX_RefBLOB{$VL_Counter}:=97+(($VL_Counter-97+13)%26)Else $VX_RefBLOB{$VL_Counter}:=$VL_CounterEnd case End for   ` Step 2 : Conversion using the reference table  ` Working with BLOB makes it faster than working on alphanumeric variablesCase of : (($VL_Type=Is String Var ) | ($VL_Type=Is Alpha Field ) | ($VL_Type=Is Text ))SET BLOB SIZE($VX_BLOB;0)TEXT TO BLOB($1->;$VX_BLOB;Mac text without length ;*)$VL_Size:=BLOB size($VX_BLOB)-1For ($VL_Counter;0;$VL_Size)$VX_BLOB{$VL_Counter}:=$VX_RefBLOB{$VX_BLOB{$VL_Counter}}End for $1->:=BLOB to text($VX_BLOB;Mac text without length ;$VL_Offset;BLOB size($VX_BLOB)): ($VL_Type=Is BLOB )$VL_Size:=BLOB size($1->)-1For ($VL_Counter;0;$VL_Size)$1->{$VL_Counter}:=$VX_RefBLOB{$1->{$VL_Counter}}End for End case End if 