C_REAL($1)  `Nombre dont il faut calculer l'arccosinusC_REAL($0)  `résultat du calcul $0:=0$0:=MTH_TRI_ArcCosine ($1)  `Work on International version   `TestéeIf (False)  `MATH_ArcCosinus    `Auteur : Micaël Germann  `Date : 19/1/1999,31/3/1999  ` ------------------------------------------------------  ` ---------------   F R A N C A I S  ---------------  ` ------------------------------------------------------  ` Rappels mathématiques :  ` Si x = Cos(a) alors a = ArcCosinus(x)  ` ---------------------------------------------  ` MATH_ArcCosinus (Nombre) -> Numérique  ` Nombre (Numérique) Nombre dont il faut calculer l'arccosinus  ` résultat (Numérique) Angle  ` ---------------------------------------------  ` MATHERROR  `  0 -> Pas d'erreur  ` -1 -> Nombre est en dehors du domaine de définition [-1,+1]  ` ---------------------------------------------  ` ATTENTION : cette méthode nécessite une version de 4D utilisant les constantes  ` ------------------------------------------------------  ` ---------------   E N G L I S H   -----------------  ` ------------------------------------------------------  ` This method returns the arccosine, or inverse cosine, of a number.   ` The arccosine is the angle whose cosine is number.   ` The returned angle is given in radians in the range 0 (zero) to pi.  ` If x = Cos(a) then a = ArcCosinus(x)  ` Syntax  ` MATH_ArcCosinus (Number)  `  ` Number  must be from-1 to 1.  `  ` Remark : to express the arccosine in degrees, multiply the result by 180/PI( ) or use the DEGREES function.  ` ---------------------------------------------  ` MATHERROR  `  0 -> Pas d'erreur  ` -1 -> Nombre est en dehors du domaine de définition [-1,+1]  ` ---------------------------------------------  ` WARNING : this method needs a 4D version using constants.  ` ---------------------------------------------  `  (translation : BE 03-2010)C_LONGINT(MATHERROR)  ` Traitement des erreursCase of : (Abs($1)>1)MATHERROR:=-1Else MATHERROR:=0End case   ` AlgorithmeIf (MATHERROR=0)Case of : ($1=0)  ` évitons une division par zéro$0:=Pi /2: ($1<0)If (Pi >4)  ` Correction d'un bug 4D sur la valeur de Pi dans certaines conditions.$0:=3,1415928-Arctan(Square root(1-($1^2))/Abs($1))Else $0:=Pi -Arctan(Square root(1-($1^2))/Abs($1))End if : ($1>0)$0:=Arctan(Square root(1-($1^2))/$1)End case End if End if 