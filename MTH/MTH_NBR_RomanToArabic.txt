  `This method is part from Math4D project 2002-2010 with authors : Jacques Bossy, Philip Burns, Olivier Deschanels, Marc Duc-Jacquet  `Bernard Escaich, Antoine Galmiche, Micaël Germann, George F. Huhn, Nicolas Jore, Teddy Linet, Frédéric Quoirez, Michel Saiz, Robert Van Loo   If (False)  ` MTH_NBR_RomanToArab (was MATH_RomainVersArabe) [Olivier Deschanels 27/2/3]  ` Elément du projet Vitruve © 1991  ` ------------------------------------------------------  ` ---------------   E N G L I S H   -----------------  ` ------------------------------------------------------  ` This method converts a string of Roman numeral to an arabic numeral  ` Note : integers are enough, because romans did not use great numerals  ` ---------------------------------------------  ` MATH_RomainVersArabe (Chaine) -> integer  ` ---------------------------------------------  ` MATHERROR  ` 0 -> No error  `-1 -> non existing number in Roman notation  ` ------------------------------------------------------  ` ---------------   F R A N C A I S  ---------------  ` ------------------------------------------------------  ` Conversion d'une chaine de chiffre romain en un entier  ` Note : les entiers suffisent car les romains ne traitaient pas de grands nombre  ` ---------------------------------------------  ` MATH_RomainVersArabe (Chaine) -> entier  ` ---------------------------------------------  ` MATHERROR  ` 0 -> Pas d'erreur  `-1 -> Nombre impossible en chiffre romain  ` ------------------------------------------------------  `  (translation : BE 3-2010)End if C_STRING(80;$1)C_INTEGER($0;$resultat)If (False)C_LONGINT(MTH_NBR_RomanToArabic ;$0)C_STRING(MTH_NBR_RomanToArabic ;80;$1)End if   `initialisation$reste:=$1$resultat:=0MATHERROR:=0  `calculRepeat Case of : ($reste≤1≥="M")$resultat:=$resultat+1000$reste:=Substring($reste;2): ($reste≤1≥="D")$resultat:=$resultat+500$reste:=Substring($reste;2): ($reste≤1≥="C")Case of : (Length($reste)=1)$resultat:=$resultat+100$reste:="": ($reste≤2≥="M")$resultat:=$resultat+900$reste:=Substring($reste;3): ($reste≤2≥="D")$resultat:=$resultat+400$reste:=Substring($reste;3)Else $resultat:=$resultat+100$reste:=Substring($reste;2)End case : ($reste≤1≥="L")$resultat:=$resultat+50$reste:=Substring($reste;2): ($reste≤1≥="X")Case of : (Length($reste)=1)$resultat:=$resultat+10$reste:="": ($reste≤2≥="C")$resultat:=$resultat+90$reste:=Substring($reste;3): ($reste≤2≥="L")$resultat:=$resultat+40$reste:=Substring($reste;3)Else $resultat:=$resultat+10$reste:=Substring($reste;2)End case : ($reste≤1≥="V")$resultat:=$resultat+5$reste:=Substring($reste;2): ($reste≤1≥="I")Case of : (Length($reste)=1)$resultat:=$resultat+1$reste:="": ($reste≤2≥="X")$resultat:=$resultat+9$reste:=Substring($reste;3): ($reste≤2≥="V")$resultat:=$resultat+4$reste:=Substring($reste;3)Else $resultat:=$resultat+1$reste:=Substring($reste;2)End case Else MATHERROR:=-1  `CE NOMBRE N'EST PAS POSSIBLE$reste:=""$resultat:=0End case Until ($reste="")$0:=$resultat