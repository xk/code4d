  `DifferencesDivisées  = InterpolationPolNewtonIf (False)  ` MATH_DifferencesDivisées  `Auteur : Duc-Jacquet Marc  `Date : 19/04/07, 18:04:20  ` ------------------------------------------------------  ` ---------------   F R A N C A I S  ---------------  ` ------------------------------------------------------  ` Méthode : MATH_DifferencesDivisées  ` Description  `   `MATH_DifférencesDivisées(->tab1;->tab2;->tab3)  `   tab1: tableau des abscisses  tab2: tableau des ordonnées  ` tab3: tableau des différences divisées  `Paramètres  ` ----------------------------------------------------  `à l'appel de la procédure les tableaux tab1 et tab2 doivent être de même dimension  `et les éléments de tab1 (représentant les abscisses) doit avoir ses éléments tous distincts  ` ------------------------------------------------------  ` ---------------   E N G L I S H   -----------------  ` ------------------------------------------------------  ` Méthode : MATH_DifferencesDivisées  ` Description  `   `MATH_DifférencesDivisées(->array1;->array2;->array3)  `   array1: abscissas array    `   array2: ordinates array  `   array3: divided differences array  `Parameters  ` ----------------------------------------------------  `Array1 and Array2 must have same length  `Array1 elements, representing abscissas, must be all distincts  ` ------------------------------------------------------  `link FR/EN : http://www.math-linux.com/spip.php?article72  `  (translation : BE 03-2010)End if C_POINTER($1;$2;$3)$N:=Size of array($1->)ARRAY REAL($3->;$N;$N)For ($i;1;$N)$3->{$i}{1}:=$2->{$i}End for For ($j;2;$N)For ($i;1;$N-$j+1)$3->{$i}{$j}:=($3->{$i+1}{$j-1}-$3->{$i}{$j-1})/($1->{$i+$j-1}-$1->{$i})End for End for   ` si on considère le polynôme d'interpolation des données ( Xi, Yi)  i=1,2,....N  `  alors les coefficients du polynôme exprimées sur la base de Newton sont   ` rangés dans tab3{1}  ( 1ère ligne du tableauà double indice  tab3)  `P(x)=tab3{1}{1}+tab3{1}{2}*(x-x1)+tab3{1}{3}*(x-x1)(x-x2)+  tab3{1}{4} *(x-x1)(x-x2)(x-x3)+ .... +  tab3{1}{n} *(x-x1)(x-x2)(...) (x-xn)