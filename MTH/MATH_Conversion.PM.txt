If (False)  // MATH_Conversion [ Teddy LINET 02/03]  // ------------------------------------------------------  // ---------------   F R A N C A I S  ---------------  // ------------------------------------------------------  // ATTENTION : cette méthode nécessite MATH_Unites  //-------------------------------------------------  // RAPPELS MATHEMATIQUES :  // Conversion des unités  //-------------------------------------------------  // MATH_Conversion ($vValeur_F;$vUniteDepart_T;$vUniteArrivée_T)-->Réel  // $vValeur_F (Reel) valeur à convertir  // $vUniteDepart_T (Reel)  Unité de la valeur à convertir  // $vUniteArrivée_T (Reel)  Unité souhaitée  // ---------------------------------------------  // MATHERROR  // 0 : Pas d'erreur  // -1 : Unités incompatibles  // -2 : Une unitée est inconnue  // ------------------------------------------------------  // ---------------   E N G L I S H   -----------------  // ------------------------------------------------------  // WARNING : this method needs MATH_Unites  //-------------------------------------------------  // Math's summary :  // Unit conversion  //-------------------------------------------------  // MATH_Conversion ($vValeur_F;$vUniteDepart_T;$vUniteArrivée_T)-->Réel  // $vValeur_F (Real) Value to convert  // $vUniteDepart_T (Real)  Unit of value to convert  // $vUniteArrivée_T (Real)  Target unit  // ---------------------------------------------  // MATHERROR  // -0 : No error  // -1 : ncompatible units  // -2 : Unknown unit  // ---------------------------------------------  //  (translation : BE 03-2010)End if   //@SVN_Folder: MATH_/C_REAL($1;$vValeur_F;$vValeurUnité_F;$vValeurZero_F)C_TEXT($2;$vUniteDepart_T;$3;$vUniteArrivée_T)C_TEXT($4;$vUniteReferenceDepart_T;$vUniteEtudiee_T;$vUniteReference_T)C_LONGINT(MATHERROR)$vValeur_F:=$1$vUniteDepart_T:=$2$vUniteArrivée_T:=$3$vValeurUnité_F:=0$vValeurZero_F:=0If (($vUniteDepart_T#"UI") | ($vUniteArrivée_T#"UI"))  // Si UI et UI => on ne fait rienCase of : ($vUniteDepart_T="UI")$vUniteDepart_T:=MATH_Unites (10;$vUniteArrivée_T)  // constante Unite_NomUI: ($vUniteArrivée_T="UI")$vUniteArrivée_T:=MATH_Unites (10;$vUniteDepart_T)  // constante Unite_NomUIEnd case If (Count parameters>3)  // Methode récursive$vUniteReferenceDepart_T:=$4$vUniteEtudiee_T:=$vUniteArrivée_TElse   // Premier appel => MATHERROR à 0$vUniteReferenceDepart_T:=""$vUniteEtudiee_T:=$vUniteDepart_TMATHERROR:=0End if $vValeurUnité_F:=Num(MATH_Unites (4;$vUniteEtudiee_T))  // Valeur conversion$vUniteReference_T:=MATH_Unites (3;$vUniteEtudiee_T)  // Unité référence$vValeurZero_F:=Num(MATH_Unites (5;$vUniteEtudiee_T))  // Valeur zéroIf (MATHERROR>=0)If ($vUniteReferenceDepart_T="")  // Premier appel$vValeur_F:=$vValeurZero_F+($vValeur_F*$vValeurUnité_F)  // On transforme en valeur internatio$vValeur_F:=MATH_Conversion ($vValeur_F;$vUniteDepart_T;$vUniteArrivée_T;$vUniteReference_T)Else   // Deuxième appel (recursif)If ($vUniteReferenceDepart_T=$vUniteReference_T)  // Caramba, pas les mêmes unités$vValeur_F:=($vValeur_F-$vValeurZero_F)/$vValeurUnité_F  // On transforme dans l'unitéElse   // Pas la même unité de référence => MATHERRORMATHERROR:=-1$vValeur_F:=0End if End if Else $vValeur_F:=0End if End if $0:=$vValeur_F