If (False)  // MATH_Gauss [Teddy LINET 08/2002]  // ------------------------------------------------------  // ---------------   F R A N C A I S  ---------------  // ------------------------------------------------------  // Méthode toute bête renvoyant la densité de probabilité en X  // Selon une distribution normale de moyenne mu et d'écart-type s  // ---------------------------------------------  // Rappels mathématiques :  // La distribution normale, ou de Laplace-Gauss, appelée aussi gaussienne est une   // distribution continue de la forme :  //   //                              (x-mu)^2  //            1        -1/2------------  // Y = --------e          s^2  //       s sqr(2pi)  // ---------------------------------------------  // Syntaxe : MATH_Gauss(VariableX;Moyenne;EType)  // Les 3 paramètres sont des reels  // ---------------------------------------------  // MATHERROR  // 0 -> Pas d'erreur  // -1->Ecart-type nul  // +1 -> Ecart-type négatif (mis à positif)  // ------------------------------------------------------  // ---------------   E N G L I S H   -----------------  // ------------------------------------------------------  // This a quite simple method that returns probability density of X  // according to a normal distribution with a mean mu and standard deviation s.  // ---------------------------------------------  //Math's summary  // Normal distribution, or Laplace-Gauss distribution, or Gaussian distribution, is a continuous distribution of the form :  //   //                              (x-mu)^2  //            1        -1/2------------  // Y = --------e          s^2  //       s sqr(2pi)  // ---------------------------------------------  // Syntaxe : MATH_Gauss(VariableX;Mean;StandardDeviation)  // 3 parameters are real.  // ---------------------------------------------  // MATHERROR  //  0 -> No error  // -1-> Standard deviation = zero  // +1 -> Negative standard deviation (changed to positive)  // ------------------------------------------------------  //  (translation : BE 03-2010)End if   //@SVN_Folder: MATH_/C_LONGINT(MATHERROR)MATHERROR:=0  // Tout marche jusqu'à preuve du contraireC_REAL($1;$2;$3;$0;$VariableY_F;$VariableX_F;$vMoyenne_F;$vEType_F;$vVarTravail_F)$VariableX_F:=$1If (Count parameters<2)  // pas de moyenne$vMoyenne_F:=0  // On centreElse $vMoyenne_F:=$2End if If (Count parameters<3)  // Pas d'ecart-type$vEType_F:=1  // On reduitElse $vEType_F:=$3End if Case of : ($vEType_F=0)  // Pas de division par 0MATHERROR:=-1: ($vEType_F<0)MATHERROR:=1$vEType_F:=Abs($vEType_F)  // Valeur absolueEnd case $VariableY_F:=0If (MATHERROR>=0)$VariableY_F:=$VariableX_F-$vMoyenne_F$VariableY_F:=$VariableY_F*$VariableY_F$VariableY_F:=$VariableY_F/($vEType_F*$vEType_F)$VariableY_F:=-$VariableY_F/2$VariableY_F:=Exp($VariableY_F)$vVarTravail_F:=2*Pi$vVarTravail_F:=Square root($vVarTravail_F)$vVarTravail_F:=$vEType_F*$vVarTravail_F$vVarTravail_F:=1/$vVarTravail_F$VariableY_F:=$vVarTravail_F*$VariableY_FEnd if $0:=$VariableY_F