  //@use:  // KV_Set_Value_by_Name ($Key_t;$Value_t;$keyNames_at_p;$keyValues_at_p {;$add_KeyValue_b})If (False)  //=================  //@FUNCTION: KV_Set_Value_by_Name  //@brief: Set the value of an existing key in a key/value stack  //=================  //@params:  // $1 (_t): Key name  // $2 (_t): Key value  // $3 (_p): Pointer on keys text array  // $4 (_p): Pointer on values text array  //@optionnal  // $5 (_b) : add key/value if key does not exist  //=================  //@author: jpupier  //@modified_by:  //---------  //@version: 1.0  //@date: 4 nov, 2010  //=================  //@SVN_Folder: KV_/Else   //=================C_TEXT($1;$keyName_t)C_TEXT($2;$keyValue_t)C_POINTER($3;$keyNames_at_p)C_POINTER($4;$keyValues_at_p)  //---------C_LONGINT($ParamCount_l)$ParamCount_l:=Count parametersC_LONGINT($element_l)C_BOOLEAN($add_KeyValue_b)  //  //=================End if   //=================  // check the parameter countIf ($ParamCount_l>=4)$keyName_t:=$1$keyValue_t:=$2$keyNames_at_p:=$3$keyValues_at_p:=$4If (Count parameters>=5)$add_KeyValue_b:=$5End if If (Type($keyNames_at_p->)=Text array) & (Type($keyValues_at_p->)=Text array)  // check if key is not emptyIf ($keyName_t#"")  // check consistency of the stackIf (Size of array($keyNames_at_p->)=Size of array($keyValues_at_p->))  // find key in the stack$element_l:=Find in array($keyNames_at_p->;$keyName_t)If ($element_l=-1)  // if not found, check for 5th parameterIf ($add_KeyValue_b)APPEND TO ARRAY($keyNames_at_p->;$keyName_t)APPEND TO ARRAY($keyValues_at_p->;$keyValue_t)End if Else   // key found, set new valueIf ($element_l<=Size of array($keyValues_at_p->))$keyValues_at_p->{$element_l}:=$keyValue_tEnd if End if End if End if End if End if   //=================  //eom