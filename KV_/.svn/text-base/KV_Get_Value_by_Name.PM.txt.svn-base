  //@use:  // $keyValue_t := KV_Get_Value_by_Name ($keyName_t; $keyNames_at_p; $keyValues_at_p)If (False)  //=================  //@FUNCTION: KV_Get_Value_by_Name  //@brief: Extracts Value from Key/Value stack  //=================  //@params:  // $1 (_t): Key name  // $2 (_p): Pointer on keys text array  // $3 (_p): Pointer on values text array  //@returns:  // $0 (_t) : Value (Empty if key not found, or error).  //=================  //@author: jpupier  //@modified_by:  //---------  //@version: 1.0  //@date: 4 nov, 2010  //=================  //@SVN_Folder: KV_/Else   //=================C_TEXT($0;$keyValue_t)C_TEXT($1;$keyName_t)C_POINTER($2;$keyNames_at_p)C_POINTER($3;$keyValues_at_p)  //---------C_LONGINT($ParamCount_l)$ParamCount_l:=Count parametersC_LONGINT($element_l)  //  //=================End if   //=================  // check the parameter countIf ($ParamCount_l>=3)$keyName_t:=$1$keyNames_at_p:=$2$keyValues_at_p:=$3  // check parameter typesIf (Type($keyNames_at_p->)=Text array) & (Type($keyValues_at_p->)=Text array)  // check if key is not emptyIf ($keyName_t#"")  // check consistency of the stackIf (Size of array($keyNames_at_p->)=Size of array($keyValues_at_p->))$element_l:=Find in array($keyNames_at_p->;$keyName_t)If ($element_l>0) & ($element_l<=Size of array($keyNames_at_p->))$keyValue_t:=$keyValues_at_p->{$element_l}End if End if End if End if End if   //=================$0:=$keyValue_t  //eof